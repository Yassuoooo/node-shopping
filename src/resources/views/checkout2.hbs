{{#if cart}}
    <h1 class="page-title">My Cart</h1>
    <br><br>

    <!-- Thêm phần hiển thị userId -->
    <p>User ID: {{ userId }}</p>
    <p>User Name: {{ username }}</p>
    <table class="table table-striped alignmiddle">
        
        <tr>
            <th>Image</th>
            <th>Title</th>
            <th>Price</th>
            <th>Quantity</th>
            <th></th>
            <th>Subtotal</th>
        </tr>

        {{!-- Lặp qua từng sản phẩm trong giỏ hàng --}}
        {{#each cart}}
            <tr>
                <td><img class="cpi" src="{{ image }}" alt=""></td>
                <td>{{ title }}</td>
                <td class="product-price" data-price="{{ price }}">${{ price }}</td>
                <td class="cart-table">
                    <span class="qty-display">{{ qty }}</span>
                    <button class="cart-action" data-action="add" data-title="{{ title }}">+</button>&nbsp;
                    <button class="cart-action" data-action="remove" data-title="{{ title }}">-</button>&nbsp;
                    <button class="cart-action" data-action="clear" data-title="{{ title }}">Clear</button>&nbsp;
                </td>
                <td class="product-subtotal">${{ calculateSubtotal price qty }}</td>
            </tr>
        {{/each}}


        <tr>
            <td colspan="6" align="right" id="cart-total"><b>Total: </b> ${{ calculateTotal cart }}</td>
        </tr>

        <tr>
            <td colspan="5" align="right">
                <a class="clearcart btn btn-danger" href="/cart/clear">Clear cart</a>
            </td>
            <td colspan="5" align="right">
                <a class="btn btn-primary buynow" href="/cart/buynow">Buy now</a>
            </td>
        </tr>
        
    </table>

{{else}}
    <h3 class="text-center">Your cart is empty.</h3>
{{/if}}

<script>

// Hàm tính tổng giá trị của giỏ hàng
function calculateTotal(cart) {
    let total = 0;
    cart.forEach(item => {
        total += parseFloat(item.price) * item.qty;
    });
    return total.toFixed(2);
}

// Hàm cập nhật giao diện người dùng
function updateUI(cart) {
    cart.forEach(item => {
        const productElement = document.querySelector(`[data-title="${item.title}"]`);
        if (productElement) {
            const qtyElement = productElement.parentElement.querySelector('.qty-display');
            const subtotalElement = productElement.parentElement.nextElementSibling;

            if (qtyElement) {
                // Cập nhật số lượng sản phẩm
                qtyElement.textContent = item.qty;

                // Xóa sản phẩm khỏi giỏ hàng nếu số lượng là 0
                if (item.qty === 0) {
                    productElement.parentElement.remove();
                }

                // Cập nhật tổng tiền cho sản phẩm
                subtotalElement.textContent = `$${(parseFloat(item.price) * item.qty).toFixed(2)}`;
            }
        }
    });

    // Cập nhật tổng giá trị của giỏ hàng
    const cartTotalElement = document.querySelector('#cart-total');
    if (cartTotalElement) {
        cartTotalElement.textContent = `$${calculateTotal(cart)}`;
    } else {
        console.error('Cart total element not found');
    }
}


document.addEventListener('DOMContentLoaded', function () {
    const cartActions = document.querySelectorAll('.cart-action');
    cartActions.forEach(function (action) {
        action.addEventListener('click', function (event) {
            event.preventDefault();
            const dataAction = this.getAttribute('data-action');
            const dataTitle = this.getAttribute('data-title');

            fetch(`/cart/update/${dataTitle}?action=${dataAction}`, {
                method: 'POST' // Sử dụng phương thức POST
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                // Cập nhật giao diện sau khi cập nhật giỏ hàng
                updateUI(data.cart);
            })
            .catch(error => {
                console.error('There was a problem with your fetch operation:', error);
                // Xử lý lỗi
            });
        });
    });

    // 
    const buyNowButton = document.querySelector('.buynow'); // Lấy button Buy now

    if (buyNowButton) {
        buyNowButton.addEventListener('click', function (event) {
            event.preventDefault();

            // Gọi API để lưu đơn hàng vào MongoDB
            fetch('/cart/checkout2', {
                method: 'POST'
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                // Xử lý sau khi đơn hàng được lưu thành công
                //alert('Order placed successfully!');
                // Chuyển hướng sang trang order-success.hbs sau khi đặt hàng thành công
                window.location.href = '/cart/order_success';
            })
            .catch(error => {
                console.error('There was a problem with your fetch operation:', error);
                // Xử lý lỗi
            });
        });
    }


});




</script>
